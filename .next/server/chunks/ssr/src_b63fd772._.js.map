{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/kushsharma/Desktop/projects/Sales%20Forecasting%20Dashboard/final%20sales%20forcast%20project/Sales-Forecast-Request-Dashboard/src/components/app-footer.tsx"],"sourcesContent":["export function AppFooter() {\n  return (\n    <footer className=\"bg-card border-t border-border py-8 text-center\">\n      <div className=\"container mx-auto px-4 md:px-8\">\n        <p className=\"text-sm text-muted-foreground\">\n          &copy; {new Date().getFullYear()} ForecastView. Powered by Firebase Studio & Genkit.\n        </p>\n      </div>\n    </footer>\n  );\n}\n"],"names":[],"mappings":";;;;;AAAO,SAAS;IACd,qBACE,8OAAC;QAAO,WAAU;kBAChB,cAAA,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAE,WAAU;;oBAAgC;oBACnC,IAAI,OAAO,WAAW;oBAAG;;;;;;;;;;;;;;;;;AAK3C","debugId":null}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["file:///Users/kushsharma/Desktop/projects/Sales%20Forecasting%20Dashboard/final%20sales%20forcast%20project/Sales-Forecast-Request-Dashboard/src/components/app-header.tsx"],"sourcesContent":["import { TrendingUp } from 'lucide-react';\nimport Link from 'next/link';\n\nexport function AppHeader() {\n  return (\n    <header className=\"bg-card border-b border-border sticky top-0 z-50\">\n      <div className=\"container mx-auto px-4 md:px-8 h-16 flex items-center\">\n        <Link href=\"/\" className=\"flex items-center gap-2 text-primary hover:opacity-80 transition-opacity\">\n          <TrendingUp className=\"h-8 w-8\" />\n          <h1 className=\"text-2xl font-bold\">ForecastView</h1>\n        </Link>\n        {/* Future navigation items can go here */}\n      </div>\n    </header>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEO,SAAS;IACd,qBACE,8OAAC;QAAO,WAAU;kBAChB,cAAA,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC,4JAAA,CAAA,UAAI;gBAAC,MAAK;gBAAI,WAAU;;kCACvB,8OAAC,kNAAA,CAAA,aAAU;wBAAC,WAAU;;;;;;kCACtB,8OAAC;wBAAG,WAAU;kCAAqB;;;;;;;;;;;;;;;;;;;;;;AAM7C","debugId":null}},
    {"offset": {"line": 102, "column": 0}, "map": {"version":3,"sources":["file:///Users/kushsharma/Desktop/projects/Sales%20Forecasting%20Dashboard/final%20sales%20forcast%20project/Sales-Forecast-Request-Dashboard/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 162, "column": 0}, "map": {"version":3,"sources":["file:///Users/kushsharma/Desktop/projects/Sales%20Forecasting%20Dashboard/final%20sales%20forcast%20project/Sales-Forecast-Request-Dashboard/src/components/ui/calendar.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n"],"names":[],"mappings":";;;;AAGA;AAAA;AACA;AAEA;AACA;AAPA;;;;;;AAWA,SAAS,SAAS,EAChB,SAAS,EACT,UAAU,EACV,kBAAkB,IAAI,EACtB,GAAG,OACW;IACd,qBACE,8OAAC,8JAAA,CAAA,YAAS;QACR,iBAAiB;QACjB,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,OAAO;QACrB,YAAY;YACV,QAAQ;YACR,OAAO;YACP,SAAS;YACT,eAAe;YACf,KAAK;YACL,YAAY,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACX,CAAA,GAAA,kIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAU,IACpC;YAEF,qBAAqB;YACrB,iBAAiB;YACjB,OAAO;YACP,UAAU;YACV,WACE;YACF,KAAK;YACL,MAAM;YACN,KAAK,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACJ,CAAA,GAAA,kIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAQ,IAClC;YAEF,eAAe;YACf,cACE;YACF,WAAW;YACX,aACE;YACF,cAAc;YACd,kBACE;YACF,YAAY;YACZ,GAAG,UAAU;QACf;QACA,YAAY;YACV,UAAU,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBAChC,8OAAC,oNAAA,CAAA,cAAW;oBAAC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;YAE7D,WAAW,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBACjC,8OAAC,sNAAA,CAAA,eAAY;oBAAC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;QAEhE;QACC,GAAG,KAAK;;;;;;AAGf;AACA,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 242, "column": 0}, "map": {"version":3,"sources":["file:///Users/kushsharma/Desktop/projects/Sales%20Forecasting%20Dashboard/final%20sales%20forcast%20project/Sales-Forecast-Request-Dashboard/src/components/ui/popover.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,UAAU,mKAAA,CAAA,OAAqB;AAErC,MAAM,iBAAiB,mKAAA,CAAA,UAAwB;AAE/C,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,QAAQ,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC5D,8OAAC,mKAAA,CAAA,SAAuB;kBACtB,cAAA,8OAAC,mKAAA,CAAA,UAAwB;YACvB,KAAK;YACL,OAAO;YACP,YAAY;YACZ,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8aACA;YAED,GAAG,KAAK;;;;;;;;;;;AAIf,eAAe,WAAW,GAAG,mKAAA,CAAA,UAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 283, "column": 0}, "map": {"version":3,"sources":["file:///Users/kushsharma/Desktop/projects/Sales%20Forecasting%20Dashboard/final%20sales%20forcast%20project/Sales-Forecast-Request-Dashboard/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 311, "column": 0}, "map": {"version":3,"sources":["file:///Users/kushsharma/Desktop/projects/Sales%20Forecasting%20Dashboard/final%20sales%20forcast%20project/Sales-Forecast-Request-Dashboard/src/components/forecast-form.tsx"],"sourcesContent":["'use client';\n\nimport type { DateRange } from '@/types';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { addDays, format } from 'date-fns';\nimport { Calendar as CalendarIcon, Loader2 } from 'lucide-react';\nimport * as React from 'react';\nimport { DateRange as ReactDateRange } from 'react-day-picker';\nimport { useForm } from 'react-hook-form';\nimport { z } from 'zod';\n\nimport { Button } from '@/components/ui/button';\nimport { Calendar } from '@/components/ui/calendar';\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from '@/components/ui/popover';\nimport { Textarea } from '@/components/ui/textarea';\nimport { cn } from '@/lib/utils';\n\nconst forecastFormSchema = z.object({\n  productDescription: z\n    .string()\n    .min(20, { message: 'Product description must be at least 20 characters.' })\n    .max(2000, { message: 'Product description must not exceed 2000 characters.' }),\n  dateRange: z.custom<DateRange>().optional(),\n});\n\ntype ForecastFormValues = z.infer<typeof forecastFormSchema>;\n\ninterface ForecastFormProps {\n  onSubmit: (descriptionWithDate: string) => void;\n  isLoading: boolean;\n}\n\nexport function ForecastForm({ onSubmit, isLoading }: ForecastFormProps) {\n  const [date, setDate] = React.useState<ReactDateRange | undefined>({\n    from: addDays(new Date(), -365),\n    to: new Date(),\n  });\n\n  const form = useForm<ForecastFormValues>({\n    resolver: zodResolver(forecastFormSchema),\n    defaultValues: {\n      productDescription: '',\n      dateRange: { from: addDays(new Date(), -365), to: new Date() },\n    },\n  });\n\n  React.useEffect(() => {\n    // Update form value when local date state changes\n    form.setValue('dateRange', date);\n  }, [date, form]);\n\n\n  function handleFormSubmit(values: ForecastFormValues) {\n    let fullDescription = values.productDescription;\n    if (values.dateRange?.from && values.dateRange?.to) {\n      fullDescription += `\\n\\nContextual Date Range: ${format(values.dateRange.from, 'PPP')} - ${format(values.dateRange.to, 'PPP')}.`;\n    } else if (values.dateRange?.from) {\n      fullDescription += `\\n\\nContextual Start Date: ${format(values.dateRange.from, 'PPP')}.`;\n    }\n    onSubmit(fullDescription);\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(handleFormSubmit)} className=\"space-y-6\">\n        <FormField\n          control={form.control}\n          name=\"productDescription\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Product Description & Sales Trends</FormLabel>\n              <FormControl>\n                <Textarea\n                  placeholder=\"e.g., Our flagship X1 Widget has shown steady 10% MoM growth. We expect a 20% surge next quarter due to a new marketing campaign...\"\n                  className=\"min-h-[120px] resize-y\"\n                  {...field}\n                />\n              </FormControl>\n              <FormDescription>\n                Provide details about the product, its past sales performance, and any factors that might influence future sales.\n              </FormDescription>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <FormField\n          control={form.control}\n          name=\"dateRange\"\n          render={({ field }) => (\n            <FormItem className=\"flex flex-col\">\n              <FormLabel>Contextual Date Range (Optional)</FormLabel>\n               <Popover>\n                <PopoverTrigger asChild>\n                  <Button\n                    id=\"date\"\n                    variant={\"outline\"}\n                    className={cn(\n                      \"w-full justify-start text-left font-normal\",\n                      !date && \"text-muted-foreground\"\n                    )}\n                  >\n                    <CalendarIcon className=\"mr-2 h-4 w-4\" />\n                    {date?.from ? (\n                      date.to ? (\n                        <>\n                          {format(date.from, \"LLL dd, y\")} -{\" \"}\n                          {format(date.to, \"LLL dd, y\")}\n                        </>\n                      ) : (\n                        format(date.from, \"LLL dd, y\")\n                      )\n                    ) : (\n                      <span>Pick a date range</span>\n                    )}\n                  </Button>\n                </PopoverTrigger>\n                <PopoverContent className=\"w-auto p-0\" align=\"start\">\n                  <Calendar\n                    initialFocus\n                    mode=\"range\"\n                    defaultMonth={date?.from}\n                    selected={date}\n                    onSelect={setDate}\n                    numberOfMonths={2}\n                  />\n                </PopoverContent>\n              </Popover>\n              <FormDescription>\n                Select a date range that provides context for your description.\n              </FormDescription>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <Button type=\"submit\" disabled={isLoading} className=\"w-full sm:w-auto\">\n          {isLoading ? (\n            <>\n              <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n              Generating Forecast...\n            </>\n          ) : (\n            'Generate Forecast'\n          )}\n        </Button>\n      </form>\n    </Form>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 584, "column": 0}, "map": {"version":3,"sources":["file:///Users/kushsharma/Desktop/projects/Sales%20Forecasting%20Dashboard/final%20sales%20forcast%20project/Sales-Forecast-Request-Dashboard/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 665, "column": 0}, "map": {"version":3,"sources":["file:///Users/kushsharma/Desktop/projects/Sales%20Forecasting%20Dashboard/final%20sales%20forcast%20project/Sales-Forecast-Request-Dashboard/src/components/performance-metrics.tsx"],"sourcesContent":["'use client';\n\nimport type { PerformanceMetricsData } from '@/types';\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';\nimport { TrendingUp, CheckCircle, AlertTriangle } from 'lucide-react';\n\ninterface PerformanceMetricsProps {\n  metrics: PerformanceMetricsData | null;\n}\n\nexport function PerformanceMetrics({ metrics }: PerformanceMetricsProps) {\n  if (!metrics) {\n    return (\n      <Card className=\"shadow-lg\">\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <TrendingUp className=\"h-6 w-6 text-primary\" />\n            Performance Metrics\n          </CardTitle>\n          <CardDescription>Illustrative metrics for a typical quantitative forecast model.</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <p className=\"text-muted-foreground\">Metrics will be displayed here once a forecast is generated.</p>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card className=\"shadow-lg\">\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <TrendingUp className=\"h-6 w-6 text-primary\" />\n          Performance Metrics\n        </CardTitle>\n        <CardDescription>Illustrative metrics for a typical quantitative forecast model.</CardDescription>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        <div className=\"flex items-center justify-between p-3 bg-secondary/30 rounded-md\">\n          <div>\n            <p className=\"text-sm font-medium text-muted-foreground\">RMSE (Root Mean Square Error)</p>\n            <p className=\"text-2xl font-semibold text-foreground\">${metrics.rmse.toLocaleString()}</p>\n          </div>\n          <CheckCircle className=\"h-8 w-8 text-green-500\" />\n        </div>\n        <div className=\"flex items-center justify-between p-3 bg-secondary/30 rounded-md\">\n          <div>\n            <p className=\"text-sm font-medium text-muted-foreground\">MAE (Mean Absolute Error)</p>\n            <p className=\"text-2xl font-semibold text-foreground\">${metrics.mae.toLocaleString()}</p>\n          </div>\n           <CheckCircle className=\"h-8 w-8 text-green-500\" />\n        </div>\n        <div className=\"flex items-center justify-between p-3 bg-secondary/30 rounded-md\">\n          <div>\n            <p className=\"text-sm font-medium text-muted-foreground\">MAPE (Mean Absolute Percentage Error)</p>\n            <p className=\"text-2xl font-semibold text-foreground\">{metrics.mape}</p>\n          </div>\n          <AlertTriangle className=\"h-8 w-8 text-yellow-500\" />\n        </div>\n         <p className=\"text-xs text-muted-foreground pt-2\">\n            Note: These are illustrative metrics. The AI provides a qualitative forecast summary.\n          </p>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AAAA;AAAA;AAJA;;;;AAUO,SAAS,mBAAmB,EAAE,OAAO,EAA2B;IACrE,IAAI,CAAC,SAAS;QACZ,qBACE,8OAAC,gIAAA,CAAA,OAAI;YAAC,WAAU;;8BACd,8OAAC,gIAAA,CAAA,aAAU;;sCACT,8OAAC,gIAAA,CAAA,YAAS;4BAAC,WAAU;;8CACnB,8OAAC,kNAAA,CAAA,aAAU;oCAAC,WAAU;;;;;;gCAAyB;;;;;;;sCAGjD,8OAAC,gIAAA,CAAA,kBAAe;sCAAC;;;;;;;;;;;;8BAEnB,8OAAC,gIAAA,CAAA,cAAW;8BACV,cAAA,8OAAC;wBAAE,WAAU;kCAAwB;;;;;;;;;;;;;;;;;IAI7C;IAEA,qBACE,8OAAC,gIAAA,CAAA,OAAI;QAAC,WAAU;;0BACd,8OAAC,gIAAA,CAAA,aAAU;;kCACT,8OAAC,gIAAA,CAAA,YAAS;wBAAC,WAAU;;0CACnB,8OAAC,kNAAA,CAAA,aAAU;gCAAC,WAAU;;;;;;4BAAyB;;;;;;;kCAGjD,8OAAC,gIAAA,CAAA,kBAAe;kCAAC;;;;;;;;;;;;0BAEnB,8OAAC,gIAAA,CAAA,cAAW;gBAAC,WAAU;;kCACrB,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;;kDACC,8OAAC;wCAAE,WAAU;kDAA4C;;;;;;kDACzD,8OAAC;wCAAE,WAAU;;4CAAyC;4CAAE,QAAQ,IAAI,CAAC,cAAc;;;;;;;;;;;;;0CAErF,8OAAC,2NAAA,CAAA,cAAW;gCAAC,WAAU;;;;;;;;;;;;kCAEzB,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;;kDACC,8OAAC;wCAAE,WAAU;kDAA4C;;;;;;kDACzD,8OAAC;wCAAE,WAAU;;4CAAyC;4CAAE,QAAQ,GAAG,CAAC,cAAc;;;;;;;;;;;;;0CAEnF,8OAAC,2NAAA,CAAA,cAAW;gCAAC,WAAU;;;;;;;;;;;;kCAE1B,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;;kDACC,8OAAC;wCAAE,WAAU;kDAA4C;;;;;;kDACzD,8OAAC;wCAAE,WAAU;kDAA0C,QAAQ,IAAI;;;;;;;;;;;;0CAErE,8OAAC,wNAAA,CAAA,gBAAa;gCAAC,WAAU;;;;;;;;;;;;kCAE1B,8OAAC;wBAAE,WAAU;kCAAqC;;;;;;;;;;;;;;;;;;AAM3D","debugId":null}},
    {"offset": {"line": 926, "column": 0}, "map": {"version":3,"sources":["file:///Users/kushsharma/Desktop/projects/Sales%20Forecasting%20Dashboard/final%20sales%20forcast%20project/Sales-Forecast-Request-Dashboard/src/components/ui/chart.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item.dataKey || item.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1222, "column": 0}, "map": {"version":3,"sources":["file:///Users/kushsharma/Desktop/projects/Sales%20Forecasting%20Dashboard/final%20sales%20forcast%20project/Sales-Forecast-Request-Dashboard/src/components/sales-chart.tsx"],"sourcesContent":["'use client';\n\nimport type { SalesDataPoint } from '@/types';\nimport { BarChart, LineChart as LucideLineChart } from 'lucide-react'; // Renamed to avoid conflict\nimport * as React from 'react';\nimport { Bar, CartesianGrid, Line, ResponsiveContainer, Tooltip, XAxis, YAxis, ComposedChart } from 'recharts';\n\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\"\nimport {\n  ChartContainer,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n} from \"@/components/ui/chart\"\n\n\n// Helper to generate more varied mock data\nfunction generateMockSalesData(version: number): SalesDataPoint[] {\n  const data: SalesDataPoint[] = [];\n  const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n  const currentYear = new Date().getFullYear();\n  const historicalYears = 2;\n  const forecastMonths = 6;\n\n  let lastHistoricalSales = 50 + (version * 5) % 50; // Base sales vary with version\n\n  // Generate historical data\n  for (let y = historicalYears - 1; y >= 0; y--) {\n    for (let m = 0; m < 12; m++) {\n      const monthName = months[m];\n      const yearSuffix = (currentYear - y).toString().slice(-2);\n      lastHistoricalSales += (Math.random() - 0.45 + (version % 3)*0.05) * 20 * (1 + m/12); // Trend + seasonality + version effect\n      lastHistoricalSales = Math.max(20, lastHistoricalSales); // Ensure sales are not too low\n      data.push({\n        name: `${monthName} '${yearSuffix}`,\n        historical: Math.round(lastHistoricalSales),\n      });\n    }\n  }\n  \n  // Generate forecast data\n  let lastForecastSales = data[data.length - 1].historical || lastHistoricalSales;\n  for (let i = 1; i <= forecastMonths; i++) {\n    const date = new Date(currentYear + historicalYears -1 , 11 + i, 1); // Start forecasting from next month\n    const monthName = months[date.getMonth()];\n    const yearSuffix = date.getFullYear().toString().slice(-2);\n    lastForecastSales += (Math.random() - 0.4 + (version % 4)*0.06) * 25; // Forecast trend + version effect\n    lastForecastSales = Math.max(30, lastForecastSales);\n    data.push({\n      name: `${monthName} '${yearSuffix} (F)`,\n      forecast: Math.round(lastForecastSales),\n    });\n  }\n\n  return data;\n}\n\n\nconst chartConfig = {\n  historical: {\n    label: \"Historical Sales\",\n    color: \"hsl(var(--chart-1))\",\n    icon: BarChart,\n  },\n  forecast: {\n    label: \"Forecasted Sales\",\n    color: \"hsl(var(--chart-2))\",\n    icon: LucideLineChart,\n  },\n}\n\ninterface SalesChartProps {\n  dataVersion: number; // Used to trigger re-generation of mock data\n}\n\nexport function SalesChart({ dataVersion }: SalesChartProps) {\n  const [chartData, setChartData] = React.useState<SalesDataPoint[]>([]);\n\n  React.useEffect(() => {\n    setChartData(generateMockSalesData(dataVersion));\n  }, [dataVersion]);\n\n  if (chartData.length === 0) {\n    return <div className=\"flex items-center justify-center h-96 text-muted-foreground\">Loading chart data...</div>;\n  }\n  \n  return (\n    <ChartContainer config={chartConfig} className=\"min-h-[300px] w-full\">\n      <ResponsiveContainer width=\"100%\" height={400}>\n        <ComposedChart data={chartData} margin={{ top: 5, right: 20, left: -20, bottom: 5 }}>\n          <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\n          <XAxis \n            dataKey=\"name\" \n            tickLine={false}\n            axisLine={false}\n            tickMargin={8}\n            tickFormatter={(value) => value.slice(0, 7)} // Shorten labels if needed\n          />\n          <YAxis \n            tickLine={false}\n            axisLine={false}\n            tickMargin={8}\n            tickFormatter={(value) => `$${value/1000}k`}\n          />\n          <Tooltip\n            cursor={true}\n            content={<ChartTooltipContent indicator=\"dot\" hideLabel />}\n          />\n          <ChartLegend content={<ChartLegendContent />} />\n          <Bar\n            dataKey=\"historical\"\n            fill=\"var(--color-historical)\"\n            radius={4}\n            barSize={20}\n            name=\"Historical Sales\"\n          />\n          <Line\n            dataKey=\"forecast\"\n            type=\"monotone\"\n            stroke=\"var(--color-forecast)\"\n            strokeWidth={2}\n            dot={{ r: 4, fill: \"var(--color-forecast)\", strokeWidth:0 }}\n            activeDot={{ r: 6, strokeWidth: 0 }}\n            name=\"Forecasted Sales\"\n          />\n        </ComposedChart>\n      </ResponsiveContainer>\n    </ChartContainer>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1446, "column": 0}, "map": {"version":3,"sources":["file:///Users/kushsharma/Desktop/projects/Sales%20Forecasting%20Dashboard/final%20sales%20forcast%20project/Sales-Forecast-Request-Dashboard/src/lib/actions.ts"],"sourcesContent":["'use server';\n\nimport { forecastSalesFromPrompt, type ForecastSalesInput, type ForecastSalesOutput } from '@/ai/flows/sales-forecast-prompt';\nimport { z } from 'zod';\n\nconst GenerateForecastActionInputSchema = z.object({\n  productDescription: z.string().min(10, \"Product description must be at least 10 characters long.\"),\n});\n\nexport async function generateForecastAction(\n  input: z.infer<typeof GenerateForecastActionInputSchema>\n): Promise<{ success: boolean; data?: ForecastSalesOutput; error?: string }> {\n  try {\n    const validatedInput = GenerateForecastActionInputSchema.parse(input);\n    const forecastInput: ForecastSalesInput = {\n      productDescription: validatedInput.productDescription,\n    };\n    const result = await forecastSalesFromPrompt(forecastInput);\n    return { success: true, data: result };\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return { success: false, error: error.errors.map(e => e.message).join(', ') };\n    }\n    console.error('Error generating forecast:', error);\n    return { success: false, error: 'Failed to generate forecast. Please try again.' };\n  }\n}\n"],"names":[],"mappings":";;;;;;IASsB,yBAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 1459, "column": 0}, "map": {"version":3,"sources":["file:///Users/kushsharma/Desktop/projects/Sales%20Forecasting%20Dashboard/final%20sales%20forcast%20project/Sales-Forecast-Request-Dashboard/src/app/page.tsx"],"sourcesContent":["'use client';\n\nimport type { ForecastSalesOutput } from '@/ai/flows/sales-forecast-prompt';\nimport type { PerformanceMetricsData } from '@/types';\nimport { AppFooter } from '@/components/app-footer';\nimport { AppHeader } from '@/components/app-header';\nimport { ForecastForm } from '@/components/forecast-form';\nimport { PerformanceMetrics } from '@/components/performance-metrics';\nimport { SalesChart } from '@/components/sales-chart';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { useToast } from '@/hooks/use-toast';\nimport { generateForecastAction } from '@/lib/actions';\nimport * as React from 'react';\n\n// Helper to generate mock performance metrics\nfunction generateMockMetrics(version: number): PerformanceMetricsData {\n  // Simple variation based on version\n  const baseRmse = 130 + (version * 7) % 50;\n  const baseMae = 100 + (version * 5) % 40;\n  const baseMape = 6 + (version * 0.5) % 4;\n  return {\n    rmse: Math.round(baseRmse + Math.random() * 20),\n    mae: Math.round(baseMae + Math.random() * 15),\n    mape: `${(baseMape + Math.random() * 2).toFixed(1)}%`,\n  };\n}\n\n\nexport default function HomePage() {\n  const [forecastResult, setForecastResult] = React.useState<ForecastSalesOutput | null>(null);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [chartDataVersion, setChartDataVersion] = React.useState(0);\n  const [currentMetrics, setCurrentMetrics] = React.useState<PerformanceMetricsData | null>(null);\n\n  const { toast } = useToast();\n\n  React.useEffect(() => {\n    // Initialize with some metrics or update when chart data version changes\n    setCurrentMetrics(generateMockMetrics(chartDataVersion));\n  }, [chartDataVersion]);\n\n\n  const handleForecastGeneration = async (descriptionWithDate: string) => {\n    setIsLoading(true);\n    setForecastResult(null); // Clear previous result\n\n    const result = await generateForecastAction({ productDescription: descriptionWithDate });\n\n    setIsLoading(false);\n\n    if (result.success && result.data) {\n      setForecastResult(result.data);\n      setChartDataVersion((prev) => prev + 1); // Trigger chart and metrics update\n      toast({\n        title: 'Forecast Generated Successfully!',\n        description: 'The sales forecast summary is now available.',\n        variant: 'default',\n      });\n    } else {\n      toast({\n        title: 'Error Generating Forecast',\n        description: result.error || 'An unknown error occurred.',\n        variant: 'destructive',\n      });\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col min-h-screen bg-background\">\n      <AppHeader />\n      <main className=\"flex-1 container mx-auto p-4 md:p-8 space-y-8\">\n        <section id=\"forecast-input\" aria-labelledby=\"forecast-input-title\">\n          <Card className=\"shadow-xl overflow-hidden\">\n            <CardHeader className=\"bg-card\">\n              <CardTitle id=\"forecast-input-title\" className=\"text-2xl\">Create Sales Forecast</CardTitle>\n              <CardDescription>\n                Describe your product and current sales trends. Optionally, specify a date range to provide context for your description. The AI will generate a forecast summary.\n              </CardDescription>\n            </CardHeader>\n            <CardContent className=\"p-6\">\n              <ForecastForm onSubmit={handleForecastGeneration} isLoading={isLoading} />\n            </CardContent>\n          </Card>\n        </section>\n\n        {isLoading && (\n          <div className=\"flex justify-center items-center p-8\">\n            <div className=\"flex flex-col items-center gap-2 text-primary\">\n                <svg className=\"animate-spin h-8 w-8 text-primary\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                    <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                </svg>\n                <p className=\"text-lg font-medium\">Generating forecast, please wait...</p>\n            </div>\n          </div>\n        )}\n\n        {forecastResult && !isLoading && (\n          <section id=\"forecast-output\" aria-labelledby=\"forecast-output-title\">\n            <Card className=\"shadow-lg\">\n              <CardHeader>\n                <CardTitle id=\"forecast-output-title\" className=\"text-xl\">AI Forecast Summary</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <p className=\"text-foreground whitespace-pre-wrap\">{forecastResult.forecastSummary}</p>\n              </CardContent>\n            </Card>\n          </section>\n        )}\n\n        <section id=\"visualizations\" aria-labelledby=\"visualizations-title\" className=\"grid md:grid-cols-3 gap-8\">\n          <div className=\"md:col-span-2\">\n             <Card className=\"shadow-lg h-full\">\n              <CardHeader>\n                <CardTitle id=\"visualizations-title\">Sales Trend Visualization</CardTitle>\n                <CardDescription>Illustrative historical and forecasted sales data. This chart updates with mock data when a new forecast is generated.</CardDescription>\n              </CardHeader>\n              <CardContent>\n                <SalesChart dataVersion={chartDataVersion} />\n              </CardContent>\n            </Card>\n          </div>\n          <div className=\"md:col-span-1\">\n            <PerformanceMetrics metrics={currentMetrics} />\n          </div>\n        </section>\n      </main>\n      <AppFooter />\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}